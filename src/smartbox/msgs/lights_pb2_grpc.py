# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import lights_pb2 as lights__pb2


class LightControllerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.set_light = channel.unary_unary(
        '/smartbox.LightController/set_light',
        request_serializer=lights__pb2.LightRequest.SerializeToString,
        response_deserializer=lights__pb2.LightResponse.FromString,
        )


class LightControllerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def set_light(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LightControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'set_light': grpc.unary_unary_rpc_method_handler(
          servicer.set_light,
          request_deserializer=lights__pb2.LightRequest.FromString,
          response_serializer=lights__pb2.LightResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'smartbox.LightController', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
